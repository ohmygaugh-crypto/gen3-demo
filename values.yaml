ambassador:
  enabled: true
arborist:
  enabled: true
argo-wrapper:
  enabled: false
audit:
  enabled: true
aws-es-proxy:
  enabled: false
  esEndpoint: test.us-east-1.es.amazonaws.com
  secrets:
    awsAccessKeyId: ''
    awsSecretAccessKey: ''
elasticsearch:
  clusterHealthCheckParams: wait_for_status=yellow&timeout=1s
  clusterName: gen3-elasticsearch
  esConfig:
    elasticsearch.yml: |
      # Here we can add elasticsearch config
      cluster.routing.allocation.disk.threshold_enabled: true
      cluster.routing.allocation.disk.watermark.low: "85%"
      cluster.routing.allocation.disk.watermark.high: "90%"
  maxUnavailable: 0
  replicas: 1
  singleNode: true
  resources:
    requests:
      memory: "4Gi"
      cpu: "2"
    limits:
      memory: "6Gi"
      cpu: "3"
etl:
  enabled: true
fence:
  enabled: true
  usersync:
    addDbgap: false
    onlyDbgap: false
    schedule: '*/30 * * * *'
    slack_send_dbgap: false
    slack_webhook: None
    syncFromDbgap: false
    userYamlS3Path: s3://cdis-gen3-users/helm-test/user.yaml
    usersync: false
frontend-framework:
  enabled: false
  image:
    repository: quay.io/cdis/frontend-framework
    tag: develop
global:
  aws:
    enabled: false
  dev: true
  dictionaryUrl: >-
    https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  dispatcherJobNum: '10'
  environment: dev
  externalSecrets:
    dbCreate: false
    deploy: false
  frontendRoot: portal
  hostname: gen3.0aefeb01-e732-4651-92c6-f3f7810268c9.k8s.civo.com
  manifestGlobalExtraValues: {}
  netPolicy:
    dbSubnet: ''
    enabled: false
  portalApp: gitops
  postgres:
    dbCreate: true
    master:
      host: gen3-postgresql
      password: "$POSTGRES_PASSWORD"
      port: '5432'
      username: postgres
  publicDataSets: true
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  tierAccessLevel: libre
  tierAccessLimit: '1000'
guppy:
  enabled: false
hatchery:
  enabled: true
  hatchery:
    containers:
      - args:
          - '--NotebookApp.base_url=/lw-workspace/proxy/'
          - '--NotebookApp.default_url=/lab'
          - '--NotebookApp.password='''''
          - '--NotebookApp.token='''''
          - '--NotebookApp.shutdown_no_activity_timeout=5400'
          - '--NotebookApp.quit_button=False'
        command:
          - start-notebook.sh
        cpu-limit: '1.0'
        env:
          FRAME_ANCESTORS: https://{{ .Values.global.hostname }}
        fs-gid: 100
        gen3-volume-location: /home/jovyan/.gen3
        image: quay.io/cdis/heal-notebooks:combined_tutorials__latest
        lifecycle-post-start:
          - /bin/sh
          - '-c'
          - >-
            export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; rm -rf
            /home/$IAM/pd/lost+found; ln -s /data /home/$IAM/pd/; true
        memory-limit: 2Gi
        name: (Tutorials) Example Analysis Jupyter Lab Notebooks
        path-rewrite: /lw-workspace/proxy/
        ready-probe: /lw-workspace/proxy/
        target-port: 8888
        use-tls: 'false'
        user-uid: 1000
        user-volume-location: /home/jovyan/pd
    sidecarContainer:
      args: []
      command:
        - /bin/bash
        - ./sidecar.sh
      cpu-limit: '0.1'
      env:
        HOSTNAME: '{{ .Values.global.hostname }}'
        NAMESPACE: '{{ .Release.Namespace }}'
      image: quay.io/cdis/ecs-ws-sidecar:master
      lifecycle-pre-stop:
        - su
        - '-c'
        - echo test
        - '-s'
        - /bin/sh
        - root
      memory-limit: 256Mi
indexd:
  defaultPrefix: PREFIX/
  enabled: true
manifestservice:
  enabled: true
metadata:
  enabled: true
neuvector:
  DB_HOST: development-gen3-postgresql
  ES_HOST: gen3-elasticsearch-master
  enabled: false
  ingress:
    class: nginx
    controller: nginx-ingress-controller
    namespace: nginx
  policies:
    include: false
    policyMode: Monitor
peregrine:
  enabled: true
pidgin:
  enabled: false
portal:
  enabled: true
  Image:
    repository: quay.io/cdis/data-portal-prebuilt
    tag: "latest"
  
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 20
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 20
    timeoutSeconds: 10
  
  service:
    port: 80
    targetPort: 80
  
  resources:
    requests:
      cpu: "1"
      memory: "8Gi"
    limits:
      cpu: "2"
      memory: "16Gi"
  
  settings:
    gaTrackingId: "undefined"
    analyticsTracking: false
    enableIndexing: false
    tierAccessLevel: "libre"
    tierAccessLimit: 1000
    public: true
  
  environment:
    - name: APP
      value: "gitops"
    - name: GEN3_BUNDLE
      value: "true"
    - name: NODE_ENV
      value: "production"

requestor:
  enabled: false
revproxy:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - host: gen3.0aefeb01-e732-4651-92c6-f3f7810268c9.k8s.civo.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: revproxy
                port:
                  number: 80
    tls: []
secrets:
  awsAccessKeyId: null
  awsSecretAccessKey: null
sheepdog:
  enabled: true
ssjdispatcher:
  enabled: false
wts:
  enabled: true